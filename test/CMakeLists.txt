#Activer le support c++11 
if(CMAKE_VERSION VERSION_LESS "3.1")
  set(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")
else ()
  set(CMAKE_CXX_STANDARD 11)
endif ()

#Librairie PTHREAD 
if(CMAKE_VERSION VERSION_GREATER "3.0")
  set(THREADS_PREFER_PTHREAD_FLAG ON)
endif ()
find_package(Threads)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -W -Wshadow -Wunused-variable -Wunused-parameter -Wunused-function -Wunused -Wno-system-headers -Wno-deprecated -Woverloaded-virtual") # various warning flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -O0") # debug, no optimisation
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --coverage") # enabling coverage
 
include_directories(../dependency)
include_directories(../dependency/jsoncpp/include)
 
#Génération de la liste des fichiers sources
file(
  GLOB_RECURSE
  Jsoncpp_files
  ../dependency/jsoncpp/src/lib_json/*
)

file(
  GLOB_RECURSE
  Plateforms_files
  ../dependency/Plateforms/*
)

file(
  GLOB_RECURSE
  SafeFunctions_files
  ../dependency/SafeFunctions/*
)

file(
  GLOB_RECURSE
  Service_files
  ../dependency/Service/*
)

file(
  GLOB_RECURSE
  SimpleFolders_files
  ../dependency/SimpleFolders/*
)

file(
  GLOB_RECURSE
  SimpleIni_files
  ../dependency/SimpleIni/*
)

file(
  GLOB_RECURSE
  SimpleLog_files
  ../dependency/SimpleLog/*
)

file(
  GLOB_RECURSE
  SimpleSock_files
  ../dependency/SimpleSock/*
)

file(
  GLOB_RECURSE
  Thread_files
  ../dependency/Thread/*
)

file(
  GLOB_RECURSE
  UnitTest_files
  ../dependency/UnitTest/*
)

file(
  GLOB_RECURSE
  StringTools_files
  ../dependency/StringTools/*
)

file(
  GLOB_RECURSE
  WebServer_files
  ../dependency/WebServer/*
)

file(
  GLOB_RECURSE
  xPLLib_files
  ../dependency/xPLLib/*
)

add_definitions( -DSIMPLESOCKUDP_MOCK )

#Déclaration de l'exécutable
set(EXECUTABLE_OUTPUT_PATH bin/${CMAKE_BUILD_TYPE})
add_executable(
  unittest
  ${Jsoncpp_files}
  ${Plateforms_files}
  ${SafeFunctions_files}
  ${Service_files}
  ${SimpleFolders_files}
  ${SimpleIni_files}
  ${SimpleLog_files}
  ${SimpleSock_files}
  ${Thread_files}
  ${UnitTest_files}
  ${StringTools_files}
  ${WebServer_files}
  ${xPLLib_files}
  main.cpp
  ../src/AdvanceConfigController.cpp
  ../src/CacheManager.cpp
  ../src/DataloggerController.cpp
  ../src/DevicesController.cpp
  ../src/MessagesController.cpp
  ../src/ModulesController.cpp
  ../src/WebManager.cpp
  ../src/xPLManager.cpp
  ../src/xPLWebApi.cpp
  CacheManagerMock.cpp
  xPLSendMock.cpp
  TestAdvanceConfigController.cpp
  TestCacheManager.cpp
  TestDataloggerController.cpp
  TestDevicesController.cpp
  TestMessagesController.cpp
  TestModulesController.cpp
  TestxPLWebApi.cpp
)

target_link_libraries(unittest ${CMAKE_THREAD_LIBS_INIT} )

#Spécification WIN32
if(WIN32)
  target_link_libraries(unittest ws2_32)
endif()